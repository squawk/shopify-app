{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        description\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        metafields(first:20, namespace:\"vizi\"){\n            edges{\n                node{\n                    id\n                    namespace\n                    key\n                    value\n                    valueType\n                }\n            }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    return __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log('that one', data); // var reworkMetafields = data.nodes.metafields.edges.reduce((r, e) => {\n      //     r[e.key] = e\n      //     return r;\n      // }, {});\n      // console.log(reworkMetafields)\n\n      return __jsx(Card, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: data.nodes,\n        renderItem: item => {\n          const media = __jsx(Thumbnail, {\n            source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n            alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n          });\n\n          const price = item.variants.edges[0].node.price;\n          return __jsx(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: `View details for ${item.title}`,\n            onClick: () => {\n              for (let i = 0; i < item.metafields.edges.length; i++) {\n                item.mf[item.metafields.edges[i].node.key] = item.metafields.edges[i].node.value;\n                console.log('ITEM', item.metafields.edges[i].node.key);\n                console.log('ITEM', item.metafields.edges[i].node.value);\n              }\n\n              item.mf = mf;\n              store.set('item', item); // console.log('ITEM', item.metafields.edges.length);\n\n              redirectToProduct();\n            }\n          }, __jsx(Stack, null, __jsx(Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, item.description))));\n        }\n      }));\n    });\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/lucasvanskyhawk/code/shopify-app-v1/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","i","metafields","length","mf","key","value","set","description"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        description\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        metafields(first:20, namespace:\"vizi\"){\n            edges{\n                node{\n                    id\n                    namespace\n                    key\n                    value\n                    valueType\n                }\n            }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n        const redirectToProduct = () => {\n            const redirect = Redirect.create(app);\n            redirect.dispatch(\n                Redirect.Action.APP,\n                '/edit-products',\n            );\n        };\n\n        return (\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loadingâ€¦</div>;\n                    if (error) return <div>{error.message}</div>;\n                    console.log('that one', data);\n                    // var reworkMetafields = data.nodes.metafields.edges.reduce((r, e) => {\n                    //     r[e.key] = e\n                    //     return r;\n                    // }, {});\n                    // console.log(reworkMetafields)\n                    return (\n                        <Card>\n                            <ResourceList\n\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\n                                items={data.nodes}\n                                renderItem={item => {\n                                    const media = (\n                                        <Thumbnail\n                                            source={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.originalSrc\n                                                    : ''\n                                            }\n                                            alt={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.altText\n                                                    : ''\n                                            }\n                                        />\n                                    );\n                                    const price = item.variants.edges[0].node.price;\n                                    return (\n                                        <ResourceList.Item\n                                            id={item.id}\n                                            media={media}\n                                            accessibilityLabel={`View details for ${item.title}`}\n                                            onClick={() => {\n\n\n                                                for (let i = 0; i < item.metafields.edges.length; i++) {\n\n                                                    item.mf[item.metafields.edges[i].node.key] = item.metafields.edges[i].node.value;\n\n                                                    console.log('ITEM', item.metafields.edges[i].node.key);\n\n                                                    console.log('ITEM', item.metafields.edges[i].node.value);\n\n                                                }\n                                                item.mf = mf;\n                                                store.set('item', item);\n                                                // console.log('ITEM', item.metafields.edges.length);\n\n                                                redirectToProduct();\n                                            }}\n                                        >\n                                            <Stack>\n                                                <Stack.Item fill>\n                                                    <h3>\n                                                        <TextStyle variation=\"strong\">\n                                                            {item.title}\n                                                        </TextStyle>\n                                                    </h3>\n                                                </Stack.Item>\n                                                <Stack.Item>\n                                                    <p>{item.description}</p>\n                                                </Stack.Item>\n                                                {/* <Stack.Item>\n                                                    <p>Expires on {twoWeeksFromNow} </p>\n                                                </Stack.Item> */}\n                                            </Stack>\n                                        </ResourceList.Item>\n                                    );\n                                }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}