{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    const twoWeeksFromNow = new Date(_Date$now() + 12096e5).toDateString();\n    return __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log(data);\n      return __jsx(Card, null, __jsx(ResourceList, {\n        showHeader: true,\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: data.nodes,\n        renderItem: item => {\n          const media = __jsx(Thumbnail, {\n            source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n            alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n          });\n\n          const price = item.descriptionHTML;\n          return __jsx(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: `View details for ${item.title}`,\n            onClick: () => {\n              store.set('item', item);\n              redirectToProduct();\n            }\n          }, __jsx(Stack, null, __jsx(Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, price))));\n        }\n      }));\n    });\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/lucasvanskyhawk/code/shopify-app-v1/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","descriptionHTML","id","title","set"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n        const redirectToProduct = () => {\n            const redirect = Redirect.create(app);\n            redirect.dispatch(\n                Redirect.Action.APP,\n                '/edit-products',\n            );\n        };\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n        return (\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loadingâ€¦</div>;\n                    if (error) return <div>{error.message}</div>;\n                    console.log(data);\n                    return (\n                        <Card>\n                            <ResourceList\n                                showHeader\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\n                                items={data.nodes}\n                                renderItem={item => {\n                                    const media = (\n                                        <Thumbnail\n                                            source={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.originalSrc\n                                                    : ''\n                                            }\n                                            alt={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.altText\n                                                    : ''\n                                            }\n                                        />\n                                    );\n                                    const price = item.descriptionHTML;\n                                    return (\n                                        <ResourceList.Item\n                                            id={item.id}\n                                            media={media}\n                                            accessibilityLabel={`View details for ${item.title}`}\n                                            onClick={() => {\n                                                store.set('item', item);\n                                                redirectToProduct();\n                                            }}\n                                        >\n                                            <Stack>\n                                                <Stack.Item fill>\n                                                    <h3>\n                                                        <TextStyle variation=\"strong\">\n                                                            {item.title}\n                                                        </TextStyle>\n                                                    </h3>\n                                                </Stack.Item>\n                                                <Stack.Item>\n                                                    <p>{price}</p>\n                                                </Stack.Item>\n                                                {/* <Stack.Item>\n                                                    <p>Expires on {twoWeeksFromNow} </p>\n                                                </Stack.Item> */}\n                                            </Stack>\n                                        </ResourceList.Item>\n                                    );\n                                }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}