{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation($input: ProductInput!) {\\n    productUpdate(input: $input) {\\n      product {\\n        metafields(first: 100) {\\n          edges {\\n            node {\\n              id\\n              namespace\\n              key\\n              value\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Banner, Card, ChoiceList, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast, Heading } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation, useQuery } from 'react-apollo';\nimport { Loading } from '@shopify/app-bridge/actions';\nimport { array } from 'prop-types';\nimport { nonExecutableDefinitionMessage } from 'graphql/validation/rules/ExecutableDefinitions'; // import { SELECT_ALL_ITEMS } from '@shopify/polaris/types/utilities/resource-list';\n\nvar UPDATE_METAFIELD = gql(_templateObject());\nexport default function EditProduct() {\n  var _useState = useState([]),\n      metafield = _useState[0],\n      setMetafield = _useState[1];\n\n  var _useState2 = useState([]),\n      item = _useState2[0],\n      setItem = _useState2[1];\n\n  var _useState3 = useState(['none']),\n      selected = _useState3[0],\n      setSelected = _useState3[1];\n\n  var handleChoiceListChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n  useEffect(function () {\n    var item = store.get('item');\n    setItem(item);\n    var metafields = [];\n    console.log('item in use effect', item.metafields.edges.length);\n\n    for (var i = 0; i < item.metafields.edges.length; i++) {\n      var field = item.metafields.edges[i].node.key;\n      metafields[field] = item.metafields.edges[i].node.value;\n      metafields[field + 'ID'] = item.metafields.edges[i].node.id;\n    }\n\n    setMetafield(metafields);\n    console.log('METAFIELDS', metafields);\n  }, []);\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setMetafield(_objectSpread({}, metafield, _defineProperty({}, name, event)));\n    };\n  };\n\n  return __jsx(Mutation, {\n    mutation: UPDATE_METAFIELD\n  }, function (handleSubmit, _ref) {\n    var error = _ref.error,\n        data = _ref.data;\n    console.log('DATA', data);\n\n    var showError = error && __jsx(Banner, {\n      status: \"critical\"\n    }, error.message);\n\n    var showToast = data && data.productUpdate && __jsx(Toast, {\n      content: \"Sucessfully updated\" // onDismiss={() => this.setState({ showToast: false })}\n\n    });\n\n    return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section 1 for \", item.title || ''), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"The Header of your product pages is the most important section as it\\u2019s the first thing a visitor sees. You have less than 3 seconds to get their attention to read more. You have to make it count!\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Every product solves a problem. You need to identify what problem the product solves. Then you need to identify what someone is feeling who has this problem. (Sad, annoyed, frustrated, jealous)\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Then you need the visitor to realize you solve that problem they have.\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"This is done in the headline. Asking if someone has that problem with a question is one of the best ways to hit the pain point someone has who needs your product.\"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.headline || '',\n      onChange: handleChange('headline'),\n      label: \"What is a question you could ask someone?\",\n      type: \"text\",\n      helpText: \"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.outcome || '',\n      onChange: handleChange('outcome'),\n      label: \"In one sentence describe the outcome of using your product.\",\n      type: \"price\",\n      helpText: \"Examples:  \\u201CLook and feel your best in less than 24 hours!\\u201D \\u201CGrow the beard of your dreams.\\u201D \\u201CSay goodbye to pain without needing surgery.\\u201D\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.videolink || '',\n      onChange: handleChange('videolink'),\n      label: \"Do you have a YouTube video selling the product?\",\n      type: \"price\",\n      helpText: \"If not, leave blank.\"\n    })))), __jsx(PageActions, {\n      primaryAction: [{\n        content: 'Next',\n        onAction: function onAction() {\n          var productMetafield = {\n            \"id\": item.id,\n            \"metafields\": [{\n              \"id\": metafield.headlineID || null,\n              'namespace': 'vizi',\n              \"key\": \"headline\",\n              \"value\": metafield.headline,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.outcomeID || null,\n              'namespace': 'vizi',\n              \"key\": \"outcome\",\n              \"value\": metafield.outcome,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.videolinkID || null,\n              'namespace': 'vizi',\n              \"key\": \"videolink\",\n              \"value\": metafield.videolink,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.featureOneID || null,\n              'namespace': 'vizi',\n              \"key\": \"featureOne\",\n              \"value\": metafield.featureOne,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.benefitOneID || null,\n              'namespace': 'vizi',\n              \"key\": \"benefitOne\",\n              \"value\": metafield.benefitOne,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.featureTwoID || null,\n              'namespace': 'vizi',\n              \"key\": \"featureTwo\",\n              \"value\": metafield.featureTwo,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.benefitTwoID || null,\n              'namespace': 'vizi',\n              \"key\": \"benefitTwo\",\n              \"value\": metafield.benefitTwo,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.featureThreeID || null,\n              'namespace': 'vizi',\n              \"key\": \"featureThree\",\n              \"value\": metafield.featureThree,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.benefitThreeID || null,\n              'namespace': 'vizi',\n              \"key\": \"benefitThree\",\n              \"value\": metafield.benefitThree,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.stepOneID || null,\n              'namespace': 'vizi',\n              \"key\": \"stepOne\",\n              \"value\": metafield.stepOne,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.stepTwoID || null,\n              'namespace': 'vizi',\n              \"key\": \"stepTwo\",\n              \"value\": metafield.stepTwo,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.stepThreeID || null,\n              'namespace': 'vizi',\n              \"key\": \"stepThree\",\n              \"value\": metafield.stepThree,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.stepFourID || null,\n              'namespace': 'vizi',\n              \"key\": \"stepFour\",\n              \"value\": metafield.stepFour,\n              \"valueType\": \"STRING\"\n            }, {\n              \"id\": metafield.stepFiveID || null,\n              'namespace': 'vizi',\n              \"key\": \"stepFive\",\n              \"value\": metafield.stepFive,\n              \"valueType\": \"STRING\"\n            }]\n          };\n          console.log('PRODUCT META', productMetafield);\n          {\n            handleSubmit({\n              variables: {\n                input: productMetafield\n              }\n            });\n          }\n          ;\n        }\n      }]\n    }))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Two: As seen on TV (optional)\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Has your product ever been featured by another business or influencer? This is a great way to create social proof about your brand. It builds a trust that you have a quality product because others have talked about you. If you don\\u2019t then you should reach out to blogs, influencers, or podcasts to promote your product. Then you can use their logo in the \\u201CAs Seen On\\u201D section. Upload 3-5 Logos on businesses, influencers, podcasts, or blogs who\\u2019ve talked about your product.\"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Three: Benefits of the product\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"People want to know the outcome of using your product. They want to know what\\u2019s in it for them! Although features are important, it's the benefits that sell the product. Benefits are the outcome of a product feature.  \"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, \"this is the image upload\"), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.featureOne || '',\n      onChange: handleChange('featureOne'),\n      label: \"Feature:\",\n      type: \"text\",\n      helpText: \"Example: High levels of L-Citrulline \"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.benefitOne || '',\n      onChange: handleChange('benefitOne'),\n      label: \"Benefit:\",\n      type: \"text\",\n      helpText: \"Example: Get the maximum pump at the gym so you can continue to increase your size and tone!\"\n    })), __jsx(FormLayout.Group, null, \"this is the image upload\"), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.featureTwo || '',\n      onChange: handleChange('featureTwo'),\n      label: \"Feature:\",\n      type: \"text\",\n      helpText: \"Example: Multiple Therapeutic Self-Heating Setting \"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.benefitTwo || '',\n      onChange: handleChange('benefitTwo'),\n      label: \"Benefit:\",\n      type: \"text\",\n      helpText: \"Example: This allows you to find the perfect setting for increased circulation leading to faster recovery and reduction in pain.\"\n    })), __jsx(FormLayout.Group, null, \"this is the image upload\"), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.featureThree || '',\n      onChange: handleChange('featureThree'),\n      label: \"Feature:\",\n      type: \"text\",\n      helpText: \"Example: Only The Highest Quality! \"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.benefitThree || '',\n      onChange: handleChange('benefitThree'),\n      label: \"Benefit:\",\n      type: \"text\",\n      helpText: \"Example: The Diamonds give the highest quality shine so you can be confident in your look.\"\n    })))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Four: How it works\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"If your product needs an explanation of the process to use it you want to detail that in 3-5 easy steps. \"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.stepOne || '',\n      onChange: handleChange('stepOne'),\n      label: \"Step 1:\",\n      type: \"text\",\n      helpText: \"There needs to be a picture with this somehow but how do i format this better idk lol\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.stepTwo || '',\n      onChange: handleChange('stepTwo'),\n      label: \"Step 2:\",\n      type: \"text\",\n      helpText: \"\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.stepThree || '',\n      onChange: handleChange('stepThree'),\n      width: \"100vw\",\n      label: \"Step 3:\",\n      type: \"text\",\n      helpText: \"\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.stepFour || '',\n      onChange: handleChange('stepFour'),\n      label: \"Step 4:\",\n      type: \"text\",\n      helpText: \"\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.stepFive || '',\n      onChange: handleChange('stepFive'),\n      label: \"Step 5:\",\n      type: \"text\",\n      helpText: \"\"\n    })))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Five: Who We Are\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"This is a good section to help connect with your visitor. The headline should be a simple statement of what you stand for.\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"The paragraph should be 3-5 sentences telling them about your story and why you started your business.\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"The image should be of you and your team or something that represents your brand. \"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.whoWeAre || 'Who We Are',\n      onChange: handleChange('whoWeAre'),\n      label: \"Headline:\",\n      type: \"text\",\n      helpText: \"\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.whoInfo || '',\n      onChange: handleChange('whoInfo'),\n      multiline: true,\n      label: \"Tell them about yourself:\",\n      type: \"text\",\n      helpText: \"\"\n    })))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Six: Reviews\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Reviews are essential to building social proof about your products. There are 4 styles of reviews to use.\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"The paragraph should be 3-5 sentences telling them about your story and why you started your business.\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"The image should be of you and your team or something that represents your brand. \"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.whoweare || 'Who We Are',\n      onChange: handleChange('whoweare'),\n      label: \"Headline:\",\n      type: \"text\",\n      helpText: \"\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.whoinfo || '',\n      onChange: handleChange('whoinfo'),\n      multiline: true,\n      label: \"Tell them about yourself:\",\n      type: \"text\",\n      helpText: \"\"\n    })))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Seven: Satisfaction Guarentee\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Having a satisfaction Guarantee is a huge boost to increase your conversion rate. One of the biggest fears people have is if they buy a product and they don\\u2019t like it. This gives them the confidence that you stand behind your product and have provided a safety net for them.\"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.satisfaction || 'Satisfaction Guarantee',\n      onChange: handleChange('satisfaction'),\n      label: \"Headline:\",\n      type: \"text\",\n      helpText: \"Examples: \\u201CWe Stand By Our Products!\\u201D \\u201C30 Day Money Back Guarantee\\u201D \"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.whoinfo || '',\n      onChange: handleChange('whoinfo'),\n      multiline: true,\n      label: \"This is a chance to explain why you have a guarantee and how to use it\",\n      type: \"text\",\n      helpText: \"\"\n    })))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Eight: FAQ/Rebuttal\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"EVERYONE has questions and concerns before buying a product. Using a FAQ section can help with more specific concerns someone might have.\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Online visitors have very little knowledge of your product. If you\\u2019re unsure what some FAQ would be, then ask friends and family who have no idea about your product what questions they would have if they were looking to buy it. \"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.question1 || '',\n      onChange: handleChange('question1'),\n      label: \"Question 1:\",\n      type: \"text\",\n      helpText: \"\"\n    }), __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.answer1 || '',\n      onChange: handleChange('answer1'),\n      multiline: true,\n      label: \"Answer 1:\",\n      type: \"text\",\n      helpText: \"\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.question2 || '',\n      onChange: handleChange('question2'),\n      label: \"Question 2:\",\n      type: \"text\",\n      helpText: \"\"\n    }), __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.answer2 || '',\n      onChange: handleChange('answer2'),\n      multiline: true,\n      label: \"Answer 2:\",\n      type: \"text\",\n      helpText: \"\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.question3 || '',\n      onChange: handleChange('question3'),\n      label: \"Question 3:\",\n      type: \"text\",\n      helpText: \"\"\n    }), __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.answer3 || '',\n      onChange: handleChange('answer3'),\n      multiline: true,\n      label: \"Answer 3:\",\n      type: \"text\",\n      helpText: \"\"\n    })))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Nine: Bonus Special Deal\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"A great way to increase conversion rates is to offer a bonus product for Free. If you have a product that goes well with the main product here is a perfect place to tell them about it. \"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"NOTE: If you\\u2019d like to use this section you will need to create a new product in Shopify that includes the bonus item or create an Automatic discount that will automatically add the bonus product to their order at check out.\"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.whoweare || 'Special Bonus!',\n      onChange: handleChange('whoweare'),\n      label: \"Headline:\",\n      type: \"text\",\n      helpText: \"Example: \\u201CSpecial Deal!\\u201D \\u201CGet [Name of Product] FREE with your purchase!\\u201D\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"\",\n      value: metafield.whoinfo || '',\n      onChange: handleChange('whoinfo'),\n      multiline: true,\n      label: \"Tell them about yourself:\",\n      type: \"text\",\n      helpText: \"\"\n    })))))), __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"extraLarge\"\n    }, \"Section Ten: Special Deal/Bundles/Variants\"), __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Here is where you will want to show different bundles or variants that your product has.\"), showError), __jsx(Layout.Section, null, __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(ChoiceList, {\n      title: \"Does your product have a variant\",\n      choices: [{\n        label: 'Yes',\n        value: 'minimum_purchase'\n      }, {\n        label: 'No',\n        value: 'minimum_quantity'\n      }],\n      selected: selected,\n      onChange: handleChoiceListChange\n    }))))))));\n  });\n}","map":{"version":3,"sources":["/Users/lucasvanskyhawk/code/shopify-app-v1/pages/edit-products.js"],"names":["React","useCallback","useState","useEffect","Banner","Card","ChoiceList","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","Heading","store","gql","Mutation","useQuery","Loading","array","nonExecutableDefinitionMessage","UPDATE_METAFIELD","EditProduct","metafield","setMetafield","item","setItem","selected","setSelected","handleChoiceListChange","value","get","metafields","console","log","edges","length","i","field","node","key","id","handleChange","name","event","handleSubmit","error","data","showError","message","showToast","productUpdate","title","headline","outcome","videolink","content","onAction","productMetafield","headlineID","outcomeID","videolinkID","featureOneID","featureOne","benefitOneID","benefitOne","featureTwoID","featureTwo","benefitTwoID","benefitTwo","featureThreeID","featureThree","benefitThreeID","benefitThree","stepOneID","stepOne","stepTwoID","stepTwo","stepThreeID","stepThree","stepFourID","stepFour","stepFiveID","stepFive","variables","input","whoWeAre","whoInfo","whoweare","whoinfo","satisfaction","question1","answer1","question2","answer2","question3","answer3","label"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport {\n    Banner,\n    Card,\n    ChoiceList,\n    DisplayText,\n    Form,\n    FormLayout,\n    Frame,\n    Layout,\n    Page,\n    PageActions,\n    TextField,\n    Toast,\n    Heading\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\n\n\nimport { Mutation, useQuery } from 'react-apollo';\nimport { Loading } from '@shopify/app-bridge/actions';\nimport { array } from 'prop-types';\nimport { nonExecutableDefinitionMessage } from 'graphql/validation/rules/ExecutableDefinitions';\n// import { SELECT_ALL_ITEMS } from '@shopify/polaris/types/utilities/resource-list';\n\n\n\n\nconst UPDATE_METAFIELD = gql`\nmutation($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        metafields(first: 100) {\n          edges {\n            node {\n              id\n              namespace\n              key\n              value\n            }\n          }\n        }\n      }\n    }\n  }`\n\n\n\nexport default function EditProduct() {\n\n    const [metafield, setMetafield] = useState([])\n    const [item, setItem] = useState([]);\n    const [selected, setSelected] = useState(['none']);\n    const handleChoiceListChange = useCallback((value) => setSelected(value), []);\n\n    useEffect(() => {\n        const item = store.get('item')\n\n        setItem(item);\n\n        let metafields = [];\n        console.log('item in use effect', item.metafields.edges.length)\n        for (let i = 0; i < item.metafields.edges.length; i++) {\n            let field = item.metafields.edges[i].node.key;\n            metafields[field] = item.metafields.edges[i].node.value;\n            metafields[field + 'ID'] = item.metafields.edges[i].node.id;\n        }\n        setMetafield(metafields)\n        console.log('METAFIELDS', metafields)\n    }, [])\n\n    const handleChange = name => event => {\n        setMetafield({ ...metafield, [name]: event });\n    }\n\n    return (\n        <Mutation\n            mutation={UPDATE_METAFIELD}\n        >\n            {(handleSubmit, { error, data }) => {\n                console.log('DATA', data)\n                const showError = error && (\n                    <Banner status=\"critical\">{error.message}</Banner>\n                );\n                const showToast = data && data.productUpdate && (\n                    <Toast\n                        content=\"Sucessfully updated\"\n                    // onDismiss={() => this.setState({ showToast: false })}\n                    />\n                );\n\n                return (\n                    <Frame>\n                        <Page>\n                            <Layout>\n\n                                {showToast}\n                                {/* section one */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section 1 for {item.title || ''}</DisplayText>\n                                    <DisplayText size=\"small\">The Header of your product pages is the most important section as it’s the first thing a visitor sees. You have less than 3 seconds to get their attention to read more. You have to make it count!</DisplayText>\n                                    <DisplayText size=\"small\">Every product solves a problem. You need to identify what problem the product solves. Then you need to identify what someone is feeling who has this problem. (Sad, annoyed, frustrated, jealous)</DisplayText>\n                                    <DisplayText size=\"small\">Then you need the visitor to realize you solve that problem they have.</DisplayText>\n                                    <DisplayText size=\"small\">This is done in the headline. Asking if someone has that problem with a question is one of the best ways to hit the pain point someone has who needs your product.</DisplayText>\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n\n\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.headline || ''}\n                                                        onChange={handleChange('headline')}\n\n                                                        label=\"What is a question you could ask someone?\"\n                                                        type=\"text\"\n                                                        helpText=\"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.outcome || ''}\n                                                        onChange={handleChange('outcome')}\n                                                        label=\"In one sentence describe the outcome of using your product.\"\n                                                        type=\"price\"\n                                                        helpText=\"Examples:  “Look and feel your best in less than 24 hours!” “Grow the beard of your dreams.” “Say goodbye to pain without needing surgery.”\"\n\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.videolink || ''}\n                                                        onChange={handleChange('videolink')}\n\n                                                        label=\"Do you have a YouTube video selling the product?\"\n                                                        type=\"price\"\n                                                        helpText=\"If not, leave blank.\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n\n                                        <PageActions\n                                            primaryAction={[\n                                                {\n                                                    content: 'Next',\n                                                    onAction: () => {\n                                                        const productMetafield = {\n\n                                                            \"id\": item.id,\n                                                            \"metafields\": [\n                                                                {\n                                                                    \"id\": metafield.headlineID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"headline\",\n                                                                    \"value\": metafield.headline,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.outcomeID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"outcome\",\n                                                                    \"value\": metafield.outcome,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.videolinkID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"videolink\",\n                                                                    \"value\": metafield.videolink,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n\n\n                                                                {\n                                                                    \"id\": metafield.featureOneID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"featureOne\",\n                                                                    \"value\": metafield.featureOne,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.benefitOneID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"benefitOne\",\n                                                                    \"value\": metafield.benefitOne,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n\n                                                                {\n                                                                    \"id\": metafield.featureTwoID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"featureTwo\",\n                                                                    \"value\": metafield.featureTwo,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.benefitTwoID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"benefitTwo\",\n                                                                    \"value\": metafield.benefitTwo,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n\n                                                                {\n                                                                    \"id\": metafield.featureThreeID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"featureThree\",\n                                                                    \"value\": metafield.featureThree,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.benefitThreeID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"benefitThree\",\n                                                                    \"value\": metafield.benefitThree,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n\n                                                                {\n                                                                    \"id\": metafield.stepOneID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"stepOne\",\n                                                                    \"value\": metafield.stepOne,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.stepTwoID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"stepTwo\",\n                                                                    \"value\": metafield.stepTwo,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.stepThreeID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"stepThree\",\n                                                                    \"value\": metafield.stepThree,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.stepFourID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"stepFour\",\n                                                                    \"value\": metafield.stepFour,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n                                                                {\n                                                                    \"id\": metafield.stepFiveID || null,\n                                                                    'namespace': 'vizi',\n                                                                    \"key\": \"stepFive\",\n                                                                    \"value\": metafield.stepFive,\n                                                                    \"valueType\": \"STRING\"\n                                                                },\n\n                                                            ]\n\n                                                        };\n                                                        console.log('PRODUCT META', productMetafield)\n                                                        {\n                                                            handleSubmit({\n                                                                variables: { input: productMetafield },\n                                                            })\n                                                        };\n                                                    }\n                                                }\n                                            ]}\n                                        />\n                                    </Form>\n                                </Layout.Section>\n\n                                {/* section two */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Two: As seen on TV (optional)</DisplayText>\n                                    <DisplayText size=\"small\">Has your product ever been featured by another business or influencer? This is a great way to create social proof about your brand. It builds a trust that you have a quality product because others have talked about you. If you don’t then you should reach out to blogs, influencers, or podcasts to promote your product. Then you can use their logo in the “As Seen On” section.\n                                        Upload 3-5 Logos on businesses, influencers, podcasts, or blogs who’ve talked about your product.\n                                    </DisplayText>\n                                    {showError}\n                                </Layout.Section>\n\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    {/* <TextField\n                                                        prefix=\"\"\n                                                        value={''}\n                                                        onChange={handleChange('logo')}\n\n                                                        label=\"What is a question you could ask someone?\"\n                                                        type=\"text\"\n                                                        helpText=\"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n\n                                                    /> */}\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n\n                                {/* section three */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Three: Benefits of the product</DisplayText>\n                                    <DisplayText size=\"small\">People want to know the outcome of using your product. They want to know what’s in it for them! Although features are important, it's the benefits that sell the product. Benefits are the outcome of a product feature.  </DisplayText>\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n                                                <FormLayout.Group>\n                                                    this is the image upload\n\n                                                    {/* <TextField\n                                                        prefix=\"\"\n                                                        value={''}\n                                                        onChange={handleChange('f')}\n\n                                                        label=\"What is a question you could ask someone?\"\n                                                        type=\"text\"\n                                                        helpText=\"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n                                                    /> */}\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.featureOne || ''}\n                                                        onChange={handleChange('featureOne')}\n\n                                                        label=\"Feature:\"\n                                                        type=\"text\"\n                                                        helpText=\"Example: High levels of L-Citrulline \"\n                                                    />\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.benefitOne || ''}\n                                                        onChange={handleChange('benefitOne')}\n\n                                                        label=\"Benefit:\"\n                                                        type=\"text\"\n                                                        helpText=\"Example: Get the maximum pump at the gym so you can continue to increase your size and tone!\"\n                                                    />\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    this is the image upload\n\n                                                    {/* <TextField\n                                                        prefix=\"\"\n                                                        value={''}\n                                                        onChange={handleChange('f')}\n\n                                                        label=\"What is a question you could ask someone?\"\n                                                        type=\"text\"\n                                                        helpText=\"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n                                                    /> */}\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.featureTwo || ''}\n                                                        onChange={handleChange('featureTwo')}\n\n                                                        label=\"Feature:\"\n                                                        type=\"text\"\n                                                        helpText=\"Example: Multiple Therapeutic Self-Heating Setting \"\n                                                    />\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.benefitTwo || ''}\n                                                        onChange={handleChange('benefitTwo')}\n\n                                                        label=\"Benefit:\"\n                                                        type=\"text\"\n                                                        helpText=\"Example: This allows you to find the perfect setting for increased circulation leading to faster recovery and reduction in pain.\"\n                                                    />\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    this is the image upload\n\n                                                    {/* <TextField\n                                                        prefix=\"\"\n                                                        value={''}\n                                                        onChange={handleChange('f')}\n\n                                                        label=\"What is a question you could ask someone?\"\n                                                        type=\"text\"\n                                                        helpText=\"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n                                                    /> */}\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.featureThree || ''}\n                                                        onChange={handleChange('featureThree')}\n\n                                                        label=\"Feature:\"\n                                                        type=\"text\"\n                                                        helpText=\"Example: Only The Highest Quality! \"\n                                                    />\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.benefitThree || ''}\n                                                        onChange={handleChange('benefitThree')}\n\n                                                        label=\"Benefit:\"\n                                                        type=\"text\"\n                                                        helpText=\"Example: The Diamonds give the highest quality shine so you can be confident in your look.\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n                                {/* section 4 */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Four: How it works</DisplayText>\n                                    <DisplayText size=\"small\">If your product needs an explanation of the process to use it you want to detail that in 3-5 easy steps. </DisplayText>\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.stepOne || ''}\n                                                        onChange={handleChange('stepOne')}\n\n                                                        label=\"Step 1:\"\n                                                        type=\"text\"\n                                                        helpText=\"There needs to be a picture with this somehow but how do i format this better idk lol\"\n                                                    />\n\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.stepTwo || ''}\n                                                        onChange={handleChange('stepTwo')}\n\n                                                        label=\"Step 2:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.stepThree || ''}\n                                                        onChange={handleChange('stepThree')}\n                                                        width='100vw'\n                                                        label=\"Step 3:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.stepFour || ''}\n                                                        onChange={handleChange('stepFour')}\n\n                                                        label=\"Step 4:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.stepFive || ''}\n                                                        onChange={handleChange('stepFive')}\n\n                                                        label=\"Step 5:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n\n                                {/* section 5 */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Five: Who We Are</DisplayText>\n                                    <DisplayText size=\"small\">This is a good section to help connect with your visitor. The headline should be a simple statement of what you stand for.</DisplayText>\n\n                                    <DisplayText size=\"small\">The paragraph should be 3-5 sentences telling them about your story and why you started your business.</DisplayText>\n                                    <DisplayText size=\"small\">The image should be of you and your team or something that represents your brand. </DisplayText>\n\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.whoWeAre || 'Who We Are'}\n                                                        onChange={handleChange('whoWeAre')}\n\n                                                        label=\"Headline:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.whoInfo || ''}\n                                                        onChange={handleChange('whoInfo')}\n                                                        multiline\n\n                                                        label=\"Tell them about yourself:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n                                {/* section 6 */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Six: Reviews</DisplayText>\n                                    <DisplayText size=\"small\">Reviews are essential to building social proof about your products. There are 4 styles of reviews to use.</DisplayText>\n\n                                    <DisplayText size=\"small\">The paragraph should be 3-5 sentences telling them about your story and why you started your business.</DisplayText>\n                                    <DisplayText size=\"small\">The image should be of you and your team or something that represents your brand. </DisplayText>\n\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.whoweare || 'Who We Are'}\n                                                        onChange={handleChange('whoweare')}\n\n                                                        label=\"Headline:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.whoinfo || ''}\n                                                        onChange={handleChange('whoinfo')}\n                                                        multiline\n\n                                                        label=\"Tell them about yourself:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n                                {/* section 7 */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Seven: Satisfaction Guarentee</DisplayText>\n                                    <DisplayText size=\"small\">Having a satisfaction Guarantee is a huge boost to increase your conversion rate. One of the biggest fears people have is if they buy a product and they don’t like it. This gives them the confidence that you stand behind your product and have provided a safety net for them.</DisplayText>\n\n\n\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.satisfaction || 'Satisfaction Guarantee'}\n                                                        onChange={handleChange('satisfaction')}\n\n                                                        label=\"Headline:\"\n                                                        type=\"text\"\n                                                        helpText=\"Examples: “We Stand By Our Products!” “30 Day Money Back Guarantee” \"\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.whoinfo || ''}\n                                                        onChange={handleChange('whoinfo')}\n                                                        multiline\n\n                                                        label=\"This is a chance to explain why you have a guarantee and how to use it\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n                                {/* section 8 */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Eight: FAQ/Rebuttal</DisplayText>\n                                    <DisplayText size=\"small\">EVERYONE has questions and concerns before buying a product. Using a FAQ section can help with more specific concerns someone might have.</DisplayText>\n\n                                    <DisplayText size=\"small\">Online visitors have very little knowledge of your product. If you’re unsure what some FAQ would be, then ask friends and family who have no idea about your product what questions they would have if they were looking to buy it. </DisplayText>\n\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.question1 || ''}\n                                                        onChange={handleChange('question1')}\n\n                                                        label=\"Question 1:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.answer1 || ''}\n                                                        onChange={handleChange('answer1')}\n                                                        multiline\n\n                                                        label=\"Answer 1:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.question2 || ''}\n                                                        onChange={handleChange('question2')}\n\n                                                        label=\"Question 2:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.answer2 || ''}\n                                                        onChange={handleChange('answer2')}\n                                                        multiline\n\n                                                        label=\"Answer 2:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.question3 || ''}\n                                                        onChange={handleChange('question3')}\n\n                                                        label=\"Question 3:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n\n\n\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.answer3 || ''}\n                                                        onChange={handleChange('answer3')}\n                                                        multiline\n\n                                                        label=\"Answer 3:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n                                {/* section 9 */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Nine: Bonus Special Deal</DisplayText>\n                                    <DisplayText size=\"small\">A great way to increase conversion rates is to offer a bonus product for Free. If you have a product that goes well with the main product here is a perfect place to tell them about it. </DisplayText>\n\n                                    <DisplayText size=\"small\">NOTE: If you’d like to use this section you will need to create a new product in Shopify that includes the bonus item or create an Automatic discount that will automatically add the bonus product to their order at check out.</DisplayText>\n\n\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.whoweare || 'Special Bonus!'}\n                                                        onChange={handleChange('whoweare')}\n\n                                                        label=\"Headline:\"\n                                                        type=\"text\"\n                                                        helpText=\"Example: “Special Deal!” “Get [Name of Product] FREE with your purchase!”\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                                <FormLayout.Group>\n                                                    <TextField\n                                                        prefix=\"\"\n                                                        value={metafield.whoinfo || ''}\n                                                        onChange={handleChange('whoinfo')}\n                                                        multiline\n\n                                                        label=\"Tell them about yourself:\"\n                                                        type=\"text\"\n                                                        helpText=\"\"\n                                                    />\n                                                </FormLayout.Group>\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n                                {/* section 10 */}\n                                <Layout.Section>\n                                    <DisplayText size='extraLarge'>Section Ten: Special Deal/Bundles/Variants</DisplayText>\n                                    <DisplayText size=\"small\">Here is where you will want to show different bundles or variants that your product has.</DisplayText>\n\n                                    {showError}\n                                </Layout.Section>\n                                <Layout.Section>\n                                    <Form>\n                                        <Card sectioned>\n                                            <FormLayout>\n\n\n                                                <ChoiceList\n                                                    title=\"Does your product have a variant\"\n                                                    choices={[\n\n                                                        { label: 'Yes', value: 'minimum_purchase' },\n                                                        {\n                                                            label: 'No',\n                                                            value: 'minimum_quantity',\n\n                                                        },\n                                                    ]}\n                                                    selected={selected}\n                                                    onChange={handleChoiceListChange}\n                                                />\n\n\n                                            </FormLayout>\n\n                                        </Card>\n                                    </Form>\n                                </Layout.Section>\n                            </Layout>\n                        </Page>\n                    </Frame>\n                );\n            }}\n        </Mutation>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}