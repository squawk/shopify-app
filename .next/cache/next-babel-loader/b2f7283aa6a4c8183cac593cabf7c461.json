{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        description\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        metafields(first:20, namespace:\\\"vizi\\\"){\\n            edges{\\n                node{\\n                    id\\n                    namespace\\n                    key\\n                    value\\n                    valueType\\n                }\\n            }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResourceListWithProducts).apply(this, arguments));\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      return __jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n        if (error) return __jsx(\"div\", null, error.message);\n        console.log(data);\n        var reworkMetafields = data.metafields.edges.reduce(function (r, e) {\n          r[e.key] = e;\n          return r;\n        }, {});\n        console.log(reworkMetafields);\n        return __jsx(Card, null, __jsx(ResourceList, {\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: function renderItem(item) {\n            var media = __jsx(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n            });\n\n            var price = item.variants.edges[0].node.price;\n            return __jsx(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title),\n              onClick: function onClick() {\n                store.set('item', item);\n                console.log('ITEM', item.id);\n                redirectToProduct();\n              }\n            }, __jsx(Stack, null, __jsx(Stack.Item, {\n              fill: true\n            }, __jsx(\"h3\", null, __jsx(TextStyle, {\n              variation: \"strong\"\n            }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, item.description))));\n          }\n        }));\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/lucasvanskyhawk/code/shopify-app-v1/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","ids","get","data","loading","error","message","console","log","reworkMetafields","metafields","edges","reduce","r","e","key","singular","plural","nodes","item","media","images","node","originalSrc","altText","price","variants","id","title","set","description","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        description\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        metafields(first:20, namespace:\"vizi\"){\n            edges{\n                node{\n                    id\n                    namespace\n                    key\n                    value\n                    valueType\n                }\n            }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n\n    static contextType = Context;\n\n    render() {\n        const app = this.context;\n        const redirectToProduct = () => {\n            const redirect = Redirect.create(app);\n            redirect.dispatch(\n                Redirect.Action.APP,\n                '/edit-products',\n            );\n        };\n\n        return (\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loadingâ€¦</div>;\n                    if (error) return <div>{error.message}</div>;\n                    console.log(data);\n                    var reworkMetafields = data.metafields.edges.reduce((r, e) => {\n                        r[e.key] = e\n                        return r;\n                    }, {});\n                    console.log(reworkMetafields)\n                    return (\n                        <Card>\n                            <ResourceList\n\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\n                                items={data.nodes}\n                                renderItem={item => {\n                                    const media = (\n                                        <Thumbnail\n                                            source={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.originalSrc\n                                                    : ''\n                                            }\n                                            alt={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.altText\n                                                    : ''\n                                            }\n                                        />\n                                    );\n                                    const price = item.variants.edges[0].node.price;\n                                    return (\n                                        <ResourceList.Item\n                                            id={item.id}\n                                            media={media}\n                                            accessibilityLabel={`View details for ${item.title}`}\n                                            onClick={() => {\n                                                store.set('item', item);\n                                                console.log('ITEM', item.id);\n                                                redirectToProduct();\n                                            }}\n                                        >\n                                            <Stack>\n                                                <Stack.Item fill>\n                                                    <h3>\n                                                        <TextStyle variation=\"strong\">\n                                                            {item.title}\n                                                        </TextStyle>\n                                                    </h3>\n                                                </Stack.Item>\n                                                <Stack.Item>\n                                                    <p>{item.description}</p>\n                                                </Stack.Item>\n                                                {/* <Stack.Item>\n                                                    <p>Expires on {twoWeeksFromNow} </p>\n                                                </Stack.Item> */}\n                                            </Stack>\n                                        </ResourceList.Item>\n                                    );\n                                }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}