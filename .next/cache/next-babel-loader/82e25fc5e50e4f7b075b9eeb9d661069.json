{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast, Heading } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Context } from '@shopify/app-bridge-react';\nimport { Mutation } from 'react-apollo';\nconst UPDATE_METAFIELD = gql`\n  mutation productUpdate($input: ProductInput!) {\n    producUpdate(input: $input) {\n      product {\n       id\n      }\n      userErrors{\n          field\n          message\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      description: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const app = this.context;\n    const item = store.get('item');\n    console.log('this is the thing', item);\n    const {\n      name,\n      description,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return __jsx(Mutation, {\n      mutation: UPDATE_METAFIELD\n    }, (handleSubmit, {\n      error,\n      data\n    }) => {\n      const showError = error && __jsx(Banner, {\n        status: \"critical\"\n      }, error.message);\n\n      const showToast = data && data.productVariantUpdate && __jsx(Toast, {\n        content: \"Sucessfully updated\",\n        onDismiss: () => this.setState({\n          showToast: false\n        })\n      });\n\n      return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, __jsx(DisplayText, {\n        size: \"small\"\n      }, \"The Header of your product pages is the most important section as it\\u2019s the first thing a visitor sees. You have less than 3 seconds to get their attention to read more. You have to make it count!\"), __jsx(DisplayText, {\n        size: \"small\"\n      }, \"Every product solves a problem. You need to identify what problem the product solves. Then you need to identify what someone is feeling who has this problem. (Sad, annoyed, frustrated, jealous)\"), __jsx(DisplayText, {\n        size: \"small\"\n      }, \"Then you need the visitor to realize you solve that problem they have.\"), __jsx(DisplayText, {\n        size: \"small\"\n      }, \"This is done in the headline. Asking if someone has that problem with a question is one of the best ways to hit the pain point someone has who needs your product.\"), showError), __jsx(Layout.Section, null, __jsx(DisplayText, {\n        size: \"large\"\n      }, name), __jsx(Form, null, __jsx(Card, {\n        sectioned: true\n      }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n        prefix: \"\",\n        value: description,\n        onChange: this.handleChange('description'),\n        label: \"What is a question you could ask someone?\",\n        type: \"price\",\n        helpText: \"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n      })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        prefix: \"\",\n        value: description,\n        label: \"In one sentence describe the outcome of using your product.\",\n        type: \"price\",\n        helpText: \"Examples:  \\u201CLook and feel your best in less than 24 hours!\\u201D \\u201CGrow the beard of your dreams.\\u201D \\u201CSay goodbye to pain without needing surgery.\\u201D\"\n      })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        prefix: \"\",\n        value: description,\n        label: \"Do you have a YouTube video selling the product?\",\n        type: \"price\",\n        helpText: \"If not, leave blank.\"\n      })))), __jsx(PageActions, {\n        primaryAction: [{\n          content: 'Save',\n          onAction: () => {\n            const productVariableInput = {\n              id: variantId,\n              price: discount\n            };\n            handleSubmit({\n              variables: {\n                input: productVariableInput\n              }\n            });\n          }\n        }] // secondaryActions={[\n        //     {\n        //         content: 'Remove discount'\n        //     }\n        // ]}\n\n      }))))));\n    });\n  }\n\n}\n\n_defineProperty(EditProduct, \"contextType\", Context);\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/lucasvanskyhawk/code/shopify-app-v1/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","Heading","store","gql","Context","Mutation","UPDATE_METAFIELD","EditProduct","React","Component","discount","description","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","app","context","console","log","name","state","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input"],"mappings":"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","sourcesContent":["import {\n    Banner,\n    Card,\n    DisplayText,\n    Form,\n    FormLayout,\n    Frame,\n    Layout,\n    Page,\n    PageActions,\n    TextField,\n    Toast,\n    Heading\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Context } from '@shopify/app-bridge-react';\n\nimport { Mutation } from 'react-apollo';\n\nconst UPDATE_METAFIELD = gql`\n  mutation productUpdate($input: ProductInput!) {\n    producUpdate(input: $input) {\n      product {\n       id\n      }\n      userErrors{\n          field\n          message\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n\n    static contextType = Context;\n\n    state = {\n        discount: '',\n        description: '',\n        price: '',\n        variantId: '',\n        showToast: false,\n    };\n\n    componentDidMount() {\n\n        this.setState({ discount: this.itemToBeConsumed() });\n    }\n\n    render() {\n        const app = this.context;\n        const item = store.get('item');\n\n        console.log('this is the thing', item);\n        const { name, description, price, discount, variantId } = this.state;\n        return (\n            <Mutation\n                mutation={UPDATE_METAFIELD}\n            >\n                {(handleSubmit, { error, data }) => {\n                    const showError = error && (\n                        <Banner status=\"critical\">{error.message}</Banner>\n                    );\n                    const showToast = data && data.productVariantUpdate && (\n                        <Toast\n                            content=\"Sucessfully updated\"\n                            onDismiss={() => this.setState({ showToast: false })}\n                        />\n                    );\n\n                    return (\n                        <Frame>\n                            <Page>\n                                <Layout>\n\n                                    {showToast}\n\n                                    <Layout.Section>\n\n                                        <DisplayText size=\"small\">The Header of your product pages is the most important section as it’s the first thing a visitor sees. You have less than 3 seconds to get their attention to read more. You have to make it count!</DisplayText>\n                                        <DisplayText size=\"small\">Every product solves a problem. You need to identify what problem the product solves. Then you need to identify what someone is feeling who has this problem. (Sad, annoyed, frustrated, jealous)</DisplayText>\n                                        <DisplayText size=\"small\">Then you need the visitor to realize you solve that problem they have.</DisplayText>\n                                        <DisplayText size=\"small\">This is done in the headline. Asking if someone has that problem with a question is one of the best ways to hit the pain point someone has who needs your product.</DisplayText>\n                                        {showError}\n                                    </Layout.Section>\n                                    <Layout.Section>\n\n                                        <DisplayText size=\"large\">{name}</DisplayText>\n                                        <Form>\n                                            <Card sectioned>\n                                                <FormLayout>\n                                                    {/* <h3> What is a question you could ask someone?</h3> */}\n                                                    <FormLayout.Group>\n                                                        <TextField\n                                                            prefix=\"\"\n                                                            value={description}\n                                                            onChange={this.handleChange('description')}\n\n                                                            label=\"What is a question you could ask someone?\"\n                                                            type=\"price\"\n                                                            helpText=\"Examples: Have dandruff? Feeling tired or sluggish? Sick Of Zits? Got Back Pain?\"\n\n                                                        />\n                                                    </FormLayout.Group>\n                                                    <FormLayout.Group>\n                                                        <TextField\n                                                            prefix=\"\"\n                                                            value={description}\n\n                                                            label=\"In one sentence describe the outcome of using your product.\"\n                                                            type=\"price\"\n                                                            helpText=\"Examples:  “Look and feel your best in less than 24 hours!” “Grow the beard of your dreams.” “Say goodbye to pain without needing surgery.”\"\n\n                                                        />\n\n                                                        {/* <TextField\n                                                            prefix=\"\"\n                                                            value={discount}\n                                                            onChange={this.handleChange('discount')}\n                                                            label=\"Discounted price\"\n                                                            type=\"discount\"\n                                                        /> */}\n                                                    </FormLayout.Group>\n                                                    <FormLayout.Group>\n                                                        <TextField\n                                                            prefix=\"\"\n                                                            value={description}\n\n                                                            label=\"Do you have a YouTube video selling the product?\"\n                                                            type=\"price\"\n                                                            helpText=\"If not, leave blank.\"\n\n                                                        />\n\n                                                        {/* <TextField\n                                                            prefix=\"\"\n                                                            value={discount}\n                                                            onChange={this.handleChange('discount')}\n                                                            label=\"Discounted price\"\n                                                            type=\"discount\"\n                                                        /> */}\n                                                    </FormLayout.Group>\n\n                                                </FormLayout>\n                                            </Card>\n                                            <PageActions\n                                                primaryAction={[\n                                                    {\n                                                        content: 'Save',\n                                                        onAction: () => {\n                                                            const productVariableInput = {\n                                                                id: variantId,\n                                                                price: discount,\n                                                            };\n                                                            handleSubmit({\n                                                                variables: { input: productVariableInput },\n                                                            });\n                                                        }\n                                                    }\n                                                ]}\n                                            // secondaryActions={[\n                                            //     {\n                                            //         content: 'Remove discount'\n                                            //     }\n                                            // ]}\n                                            />\n                                        </Form>\n                                    </Layout.Section>\n                                </Layout>\n                            </Page>\n                        </Frame>\n                    );\n                }}\n            </Mutation>\n        );\n    }\n\n    handleChange = (field) => {\n        return (value) => this.setState({ [field]: value });\n    };\n\n    itemToBeConsumed = () => {\n        const item = store.get('item');\n        const price = item.variants.edges[0].node.price;\n        const variantId = item.variants.edges[0].node.id;\n        const discounter = price * 0.1;\n        this.setState({ price, variantId });\n        return (price - discounter).toFixed(2);\n    };\n}\n\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}